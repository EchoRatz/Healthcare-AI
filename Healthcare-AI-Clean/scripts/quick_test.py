"""Quick test entry point."""
import sys
import os
import csv
from pathlib import Path

# Add src to path
sys.path.insert(0, str(Path(__file__).parent.parent / "src"))

from infrastructure.repositories.CsvQuestionRepository import CsvQuestionRepository
from infrastructure.services.SimpleAnswerService import SimpleAnswerService
from core.use_cases.ProcessCsvBatch import ProcessCsvBatch


def create_sample_csv() -> str:
    """Create sample CSV file for testing."""
    sample_questions = [
        {
            'id': '1', 
            'question': '‡∏ú‡∏°‡∏õ‡∏ß‡∏î‡∏ó‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å ‡∏≠‡πâ‡∏ß‡∏Å‡∏î‡πâ‡∏ß‡∏¢ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏ï‡∏µ‡∏™‡∏≠‡∏á‡∏¢‡∏±‡∏á‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡∏Å‡πÑ‡∏´‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?  ‡∏Å. Endocrinology ‡∏Ç. Orthopedics ‡∏Ñ. Emergency ‡∏á. Internal Medicine',
            'answer': ''
        },
        {
            'id': '2', 
            'question': '‡∏¢‡∏≤ Clopidogrel mg tablet ‡πÉ‡∏ô‡∏õ‡∏µ 2567 ‡∏à‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏ó‡πà‡∏≤‡πÉ‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏°‡πá‡∏î‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ô‡∏≠‡∏Å (OP)?  ‡∏Å. 2 ‡∏ö‡∏≤‡∏ó/‡πÄ‡∏°‡πá‡∏î ‡∏Ç. 3 ‡∏ö‡∏≤‡∏ó/‡πÄ‡∏°‡πá‡∏î ‡∏Ñ. 4 ‡∏ö‡∏≤‡∏ó/‡πÄ‡∏°‡πá‡∏î ‡∏á. 5 ‡∏ö‡∏≤‡∏ó/‡πÄ‡∏°‡πá‡∏î',
            'answer': ''
        },
        {
            'id': '3', 
            'question': '‡∏Ç‡πâ‡∏≠‡πÉ‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡∏ß‡∏¥‡∏Å‡∏§‡∏ï‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πà‡∏≤‡∏¢‡∏™‡∏¥‡∏ó‡∏ò‡∏¥ UCEP?  ‡∏Å. ‡πÄ‡∏à‡πá‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏Å‡πÄ‡∏â‡∏µ‡∏¢‡∏ö‡∏û‡∏•‡∏±‡∏ô‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á ‡∏Ç. ‡∏õ‡∏ß‡∏î‡∏´‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á ‡∏Ñ. ‡∏°‡∏µ‡πÑ‡∏Ç‡πâ‡∏™‡∏π‡∏á ‡∏á. ‡∏õ‡∏ß‡∏î‡∏ó‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á',
            'answer': ''
        },
        {
            'id': '4', 
            'question': '‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡πÉ‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏´‡∏•‡∏±‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÅ‡∏´‡πà‡∏á‡∏ä‡∏≤‡∏ï‡∏¥?  ‡∏Å. ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏´‡∏•‡∏±‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÅ‡∏´‡πà‡∏á‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏Ç. ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏ö‡∏±‡∏ï‡∏£‡∏ó‡∏≠‡∏á ‡∏Ñ. ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥ 30 ‡∏ö‡∏≤‡∏ó‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ó‡∏∏‡∏Å‡πÇ‡∏£‡∏Ñ ‡∏á. ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡πÉ‡∏î‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á',
            'answer': ''
        },
        {
            'id': '5', 
            'question': '‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡∏≠‡∏ö‡∏ü‡∏•‡∏π‡∏≠‡∏≠‡πÑ‡∏£‡∏î‡πå‡∏ä‡∏ô‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡πâ‡∏ô‡∏™‡∏π‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡πÄ‡∏´‡∏°‡∏≤‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏ó‡πà‡∏≤‡πÉ‡∏î‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á?  ‡∏Å. 50 ‡∏ö‡∏≤‡∏ó ‡∏Ç. 75 ‡∏ö‡∏≤‡∏ó ‡∏Ñ. 100 ‡∏ö‡∏≤‡∏ó ‡∏á. 150 ‡∏ö‡∏≤‡∏ó',
            'answer': ''
        }
    ]
    
    filename = "quick_test_sample.csv"
    with open(filename, 'w', encoding='utf-8', newline='') as file:
        writer = csv.DictWriter(file, fieldnames=['id', 'question', 'answer'])
        writer.writeheader()
        writer.writerows(sample_questions)
    
    return filename


def main():
    """Quick test with sample questions."""
    print("üß™ Quick Test - Processing 5 sample questions")
    print("=" * 50)
    
    try:
        # Create sample CSV
        print("üìù Creating sample questions...")
        sample_file = create_sample_csv()
        print(f"‚úÖ Created: {sample_file}")
        
        # Initialize components
        question_repo = CsvQuestionRepository()
        answer_service = SimpleAnswerService()
        batch_processor = ProcessCsvBatch(question_repo, answer_service)
        
        # Process questions
        result = batch_processor.execute(sample_file, "quick_test_answers.csv", batch_size=5)
        
        # Show results
        print("\nüìä Results:")
        for i, res in enumerate(result.results[:5]):
            print(f"   Q{res['id']}: {res['answer']}")
        
        stats = result.stats
        print(f"‚úÖ Success rate: {stats.success_rate:.1f}%")
        print(f"‚è±Ô∏è  Duration: {stats.duration:.2f} seconds")
        
        # Cleanup
        if os.path.exists(sample_file):
            os.remove(sample_file)
        
        print(f"\nüíæ Full results saved to: {result.output_file}")
        
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")
        print("üí° Make sure all dependencies are installed:")
        print("   pip install -e .")


if __name__ == "__main__":
    main()